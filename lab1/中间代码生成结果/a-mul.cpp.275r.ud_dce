
;; Function __static_initialization_and_destruction_0.constprop (_Z41__static_initialization_and_destruction_0ii.constprop.0, funcdef_no=2278, decl_uid=51721, cgraph_uid=1022, symbol_order=1200) (executed once)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)


__static_initialization_and_destruction_0.constprop

Dataflow summary:
;;  fully invalidated by EH 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 67 [vg] 68 [p0] 69 [p1] 70 [p2] 71 [p3] 72 [p4] 73 [p5] 74 [p6] 75 [p7] 76 [p8] 77 [p9] 78 [p10] 79 [p11] 80 [p12] 81 [p13] 82 [p14] 83 [p15] 84 [ffr] 85 [ffrt]
;;  hardware regs used 	 31 [sp] 64 [sfp] 65 [ap]
;;  regular block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  eh block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  entry block defs 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 64 [sfp] 65 [ap]
;;  exit block uses 	 29 [x29] 31 [sp] 64 [sfp]
;;  regs ever live 	 0 [x0] 1 [x1] 2 [x2] 16 [x16] 17 [x17] 30 [x30] 31 [sp]
;;  ref usage 	r0={5d,2u} r1={4d,1u} r2={4d,1u} r3={3d} r4={3d} r5={3d} r6={3d} r7={3d} r8={3d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={4d} r17={4d} r18={2d} r29={1d,2u} r30={3d} r31={1d,4u} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={1d,2u} r65={1d,1u} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r92={1d,2u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r98={1d,1u} r99={1d,1u} 
;;    total ref usage 184{164d,20u,0e} in 12{10 regular + 2 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157
;;  reg->defs[] map:	0[0,4] 1[5,8] 2[9,12] 3[13,15] 4[16,18] 5[19,21] 6[22,24] 7[25,27] 8[28,30] 9[31,32] 10[33,34] 11[35,36] 12[37,38] 13[39,40] 14[41,42] 15[43,44] 16[45,48] 17[49,52] 18[53,54] 29[55,55] 30[56,58] 31[59,59] 32[60,62] 33[63,65] 34[66,68] 35[69,71] 36[72,74] 37[75,77] 38[78,80] 39[81,83] 48[84,85] 49[86,87] 50[88,89] 51[90,91] 52[92,93] 53[94,95] 54[96,97] 55[98,99] 56[100,101] 57[102,103] 58[104,105] 59[106,107] 60[108,109] 61[110,111] 62[112,113] 63[114,115] 64[116,116] 65[117,117] 66[118,119] 67[120,121] 68[122,123] 69[124,125] 70[126,127] 71[128,129] 72[130,131] 73[132,133] 74[134,135] 75[136,137] 76[138,139] 77[140,141] 78[142,143] 79[144,145] 80[146,147] 81[148,149] 82[150,151] 83[152,153] 84[154,155] 85[156,157] 92[158,158] 93[159,159] 94[160,160] 95[161,161] 98[162,162] 99[163,163] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d4(0){ }d8(1){ }d12(2){ }d15(3){ }d18(4){ }d21(5){ }d24(6){ }d27(7){ }d30(8){ }d55(29){ }d58(30){ }d59(31){ }d62(32){ }d65(33){ }d68(34){ }d71(35){ }d74(36){ }d77(37){ }d80(38){ }d83(39){ }d116(64){ }d117(65){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 64 [sfp] 65 [ap]
;; live  in  	
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 64 [sfp] 65 [ap]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(22) 0[4],1[8],2[12],3[15],4[18],5[21],6[24],7[27],8[30],29[55],30[58],31[59],32[62],33[65],34[68],35[71],36[74],37[77],38[80],39[83],64[116],65[117]
;; rd  kill	(62) 0[0,1,2,3,4],1[5,6,7,8],2[9,10,11,12],3[13,14,15],4[16,17,18],5[19,20,21],6[22,23,24],7[25,26,27],8[28,29,30],29[55],30[56,57,58],31[59],32[60,61,62],33[63,64,65],34[66,67,68],35[69,70,71],36[72,73,74],37[75,76,77],38[78,79,80],39[81,82,83],64[116],65[117]
;;  UD chains for artificial uses at top
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; rd  out 	(4) 29[55],31[59],64[116],65[117]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(29){ d55(bb 0 insn -1) }u-1(31){ d59(bb 0 insn -1) }u-1(64){ d116(bb 0 insn -1) }u-1(65){ d117(bb 0 insn -1) }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 67 [vg] 68 [p0] 69 [p1] 70 [p2] 71 [p3] 72 [p4] 73 [p5] 74 [p6] 75 [p7] 76 [p8] 77 [p9] 78 [p10] 79 [p11] 80 [p12] 81 [p13] 82 [p14] 83 [p15] 84 [ffr] 85 [ffrt] 92 93 94 95 98 99
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 92 93 94 95 98 99
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(4) 29[55],31[59],64[116],65[117]
;; rd  gen 	(7) 0[0],92[158],93[159],94[160],95[161],98[162],99[163]
;; rd  kill	(11) 0[0,1,2,3,4],92[158],93[159],94[160],95[161],98[162],99[163]
;;  UD chains for artificial uses at top
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; rd  out 	(4) 29[55],31[59],64[116],65[117]
;;  UD chains for artificial uses at bottom
;;   reg 29 { d55(bb 0 insn -1) }
;;   reg 31 { d59(bb 0 insn -1) }
;;   reg 64 { d116(bb 0 insn -1) }
;;   reg 65 { d117(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(29){ d55(bb 0 insn -1) }u-1(31){ d59(bb 0 insn -1) }u-1(64){ d116(bb 0 insn -1) }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp]
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp]
;; lr  def 	
;; live  in  	 29 [x29] 31 [sp] 64 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 29[55],31[59],64[116],65[117]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 29 { d55(bb 0 insn -1) }
;;   reg 31 { d59(bb 0 insn -1) }
;;   reg 64 { d116(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 18 to worklist
  Adding insn 8 to worklist
Finished finding needed instructions:
Processing use of (reg 31 sp) in insn 8:
Processing use of (reg 0 x0) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 92) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 93) in insn 6:
  Adding insn 5 to worklist
Processing use of (reg 31 sp) in insn 18:
Processing use of (reg 0 x0) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 1 x1) in insn 18:
  Adding insn 16 to worklist
Processing use of (reg 2 x2) in insn 18:
  Adding insn 15 to worklist
Processing use of (reg 94) in insn 15:
  Adding insn 10 to worklist
Processing use of (reg 95) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 92) in insn 16:
Processing use of (reg 98) in insn 17:
  Adding insn 14 to worklist
Processing use of (reg 99) in insn 14:
  Adding insn 13 to worklist
starting the processing of deferred insns
ending the processing of deferred insns


__static_initialization_and_destruction_0.constprop

Dataflow summary:
;;  fully invalidated by EH 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 67 [vg] 68 [p0] 69 [p1] 70 [p2] 71 [p3] 72 [p4] 73 [p5] 74 [p6] 75 [p7] 76 [p8] 77 [p9] 78 [p10] 79 [p11] 80 [p12] 81 [p13] 82 [p14] 83 [p15] 84 [ffr] 85 [ffrt]
;;  hardware regs used 	 31 [sp] 64 [sfp] 65 [ap]
;;  regular block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  eh block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  entry block defs 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 64 [sfp] 65 [ap]
;;  exit block uses 	 29 [x29] 31 [sp] 64 [sfp]
;;  regs ever live 	 0 [x0] 1 [x1] 2 [x2] 16 [x16] 17 [x17] 30 [x30] 31 [sp]
;;  ref usage 	r0={5d,2u} r1={4d,1u} r2={4d,1u} r3={3d} r4={3d} r5={3d} r6={3d} r7={3d} r8={3d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={4d} r17={4d} r18={2d} r29={1d,2u} r30={3d} r31={1d,4u} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={1d,2u} r65={1d,1u} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r92={1d,2u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r98={1d,1u} r99={1d,1u} 
;;    total ref usage 184{164d,20u,0e} in 12{10 regular + 2 call} insns.
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:DI 93)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) "/usr/include/c++/11/iostream":74:25 53 {*movdi_aarch64}
     (nil))
(insn 6 5 7 2 (set (reg/f:DI 92)
        (lo_sum:DI (reg/f:DI 93)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) "/usr/include/c++/11/iostream":74:25 1014 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 93)
        (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
            (nil))))
(insn 7 6 8 2 (set (reg:DI 0 x0)
        (reg/f:DI 92)) "/usr/include/c++/11/iostream":74:25 53 {*movdi_aarch64}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(call_insn 8 7 9 2 (parallel [
            (call (mem:DI (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0xffffa23fbb00 __ct_comp >) [0 __ct_comp  S8 A8])
                (const_int 0 [0]))
            (unspec:DI [
                    (const_int 0 [0])
                ] UNSPEC_CALLEE_ABI)
            (clobber (reg:DI 30 x30))
        ]) "/usr/include/c++/11/iostream":74:25 46 {*call_insn}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0xffffa23fbb00 __ct_comp >)
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(insn 9 8 10 2 (set (reg/f:DI 95)
        (high:DI (symbol_ref:DI ("__dso_handle") [flags 0xc2]  <var_decl 0xffffa1645120 __dso_handle>))) "/usr/include/c++/11/iostream":74:25 53 {*movdi_aarch64}
     (nil))
(insn 10 9 13 2 (set (reg/f:DI 94)
        (lo_sum:DI (reg/f:DI 95)
            (symbol_ref:DI ("__dso_handle") [flags 0xc2]  <var_decl 0xffffa1645120 __dso_handle>))) "/usr/include/c++/11/iostream":74:25 1014 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 95)
        (expr_list:REG_EQUAL (symbol_ref:DI ("__dso_handle") [flags 0xc2]  <var_decl 0xffffa1645120 __dso_handle>)
            (nil))))
(insn 13 10 14 2 (set (reg/f:DI 99)
        (high:DI (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0xffffa23fbd00 __dt_comp >))) "/usr/include/c++/11/iostream":74:25 53 {*movdi_aarch64}
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 98)
        (unspec:DI [
                (mem/u/c:DI (lo_sum:DI (reg/f:DI 99)
                        (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0xffffa23fbd00 __dt_comp >)) [0  S8 A8])
            ] UNSPEC_GOTSMALLPIC)) "/usr/include/c++/11/iostream":74:25 1016 {ldr_got_small_di}
     (expr_list:REG_DEAD (reg/f:DI 99)
        (expr_list:REG_EQUAL (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0xffffa23fbd00 __dt_comp >)
            (nil))))
(insn 15 14 16 2 (set (reg:DI 2 x2)
        (reg/f:DI 94)) "/usr/include/c++/11/iostream":74:25 53 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 94)
        (expr_list:REG_EQUAL (symbol_ref:DI ("__dso_handle") [flags 0xc2]  <var_decl 0xffffa1645120 __dso_handle>)
            (nil))))
(insn 16 15 17 2 (set (reg:DI 1 x1)
        (reg/f:DI 92)) "/usr/include/c++/11/iostream":74:25 53 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 92)
        (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
            (nil))))
(insn 17 16 18 2 (set (reg:DI 0 x0)
        (reg/f:DI 98)) "/usr/include/c++/11/iostream":74:25 53 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 98)
        (expr_list:REG_EQUAL (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0xffffa23fbd00 __dt_comp >)
            (nil))))
(call_insn/j 18 17 0 2 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0xffffa164f200 __cxa_atexit>) [0 __cxa_atexit S8 A8])
                    (const_int 0 [0])))
            (unspec:DI [
                    (const_int 0 [0])
                ] UNSPEC_CALLEE_ABI)
            (return)
        ]) "/usr/include/c++/11/iostream":74:25 49 {*sibcall_value_insn}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:DI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0xffffa164f200 __cxa_atexit>)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))

;; Function main (main, funcdef_no=1776, decl_uid=46757, cgraph_uid=510, symbol_order=540) (executed once)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 9 n_edges 10 count 10 (  1.1)


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 67 [vg] 68 [p0] 69 [p1] 70 [p2] 71 [p3] 72 [p4] 73 [p5] 74 [p6] 75 [p7] 76 [p8] 77 [p9] 78 [p10] 79 [p11] 80 [p12] 81 [p13] 82 [p14] 83 [p15] 84 [ffr] 85 [ffrt]
;;  hardware regs used 	 31 [sp] 64 [sfp] 65 [ap]
;;  regular block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  eh block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  entry block defs 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 64 [sfp] 65 [ap]
;;  exit block uses 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp]
;;  regs ever live 	 0 [x0] 1 [x1] 16 [x16] 17 [x17] 30 [x30] 31 [sp] 66 [cc]
;;  ref usage 	r0={8d,5u} r1={8d,3u} r2={5d} r3={5d} r4={5d} r5={5d} r6={5d} r7={5d} r8={5d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={8d} r17={8d} r18={4d} r29={1d,8u} r30={5d} r31={1d,12u} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={1d,12u,1e} r65={1d,7u} r66={7d,3u} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r94={1d,1u} r96={3d,2u} r97={2d,3u} r98={1d,2u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r110={1d,1u} r111={1d,1u} 
;;    total ref usage 383{313d,69u,1e} in 36{32 regular + 4 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294
;;  reg->defs[] map:	0[0,7] 1[8,15] 2[16,20] 3[21,25] 4[26,30] 5[31,35] 6[36,40] 7[41,45] 8[46,50] 9[51,54] 10[55,58] 11[59,62] 12[63,66] 13[67,70] 14[71,74] 15[75,78] 16[79,86] 17[87,94] 18[95,98] 29[99,99] 30[100,104] 31[105,105] 32[106,110] 33[111,115] 34[116,120] 35[121,125] 36[126,130] 37[131,135] 38[136,140] 39[141,145] 48[146,149] 49[150,153] 50[154,157] 51[158,161] 52[162,165] 53[166,169] 54[170,173] 55[174,177] 56[178,181] 57[182,185] 58[186,189] 59[190,193] 60[194,197] 61[198,201] 62[202,205] 63[206,209] 64[210,210] 65[211,211] 66[212,218] 67[219,222] 68[223,226] 69[227,230] 70[231,234] 71[235,238] 72[239,242] 73[243,246] 74[247,250] 75[251,254] 76[255,258] 77[259,262] 78[263,266] 79[267,270] 80[271,274] 81[275,278] 82[279,282] 83[283,286] 84[287,290] 85[291,294] 94[295,295] 96[296,298] 97[299,300] 98[301,301] 100[302,302] 101[303,303] 102[304,304] 103[305,305] 104[306,306] 105[307,307] 106[308,308] 107[309,309] 108[310,310] 110[311,311] 111[312,312] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d7(0){ }d15(1){ }d20(2){ }d25(3){ }d30(4){ }d35(5){ }d40(6){ }d45(7){ }d50(8){ }d99(29){ }d104(30){ }d105(31){ }d110(32){ }d115(33){ }d120(34){ }d125(35){ }d130(36){ }d135(37){ }d140(38){ }d145(39){ }d210(64){ }d211(65){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 64 [sfp] 65 [ap]
;; live  in  	
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 64 [sfp] 65 [ap]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(22) 0[7],1[15],2[20],3[25],4[30],5[35],6[40],7[45],8[50],29[99],30[104],31[105],32[110],33[115],34[120],35[125],36[130],37[135],38[140],39[145],64[210],65[211]
;; rd  kill	(100) 0[0,1,2,3,4,5,6,7],1[8,9,10,11,12,13,14,15],2[16,17,18,19,20],3[21,22,23,24,25],4[26,27,28,29,30],5[31,32,33,34,35],6[36,37,38,39,40],7[41,42,43,44,45],8[46,47,48,49,50],29[99],30[100,101,102,103,104],31[105],32[106,107,108,109,110],33[111,112,113,114,115],34[116,117,118,119,120],35[121,122,123,124,125],36[126,127,128,129,130],37[131,132,133,134,135],38[136,137,138,139,140],39[141,142,143,144,145],64[210],65[211]
;;  UD chains for artificial uses at top
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; rd  out 	(4) 29[99],31[105],64[210],65[211]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 3 5 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(29){ d99(bb 0 insn -1) }u-1(31){ d105(bb 0 insn -1) }u-1(64){ d210(bb 0 insn -1) }u-1(65){ d211(bb 0 insn -1) }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 67 [vg] 68 [p0] 69 [p1] 70 [p2] 71 [p3] 72 [p4] 73 [p5] 74 [p6] 75 [p7] 76 [p8] 77 [p9] 78 [p10] 79 [p11] 80 [p12] 81 [p13] 82 [p14] 83 [p15] 84 [ffr] 85 [ffrt] 98 100 101 102 103 104
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 0 [x0] 1 [x1] 66 [cc] 98 100 101 102 103 104
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(4) 29[99],31[105],64[210],65[211]
;; rd  gen 	(8) 0[5],66[217],98[301],100[302],101[303],102[304],103[305],104[306]
;; rd  kill	(26) 0[0,1,2,3,4,5,6,7],30[100,101,102,103,104],66[212,213,214,215,216,217,218],98[301],100[302],101[303],102[304],103[305],104[306]
;;  UD chains for artificial uses at top
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 98
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 98
;; rd  out 	(5) 29[99],31[105],64[210],65[211],98[301]
;;  UD chains for artificial uses at bottom
;;   reg 29 { d99(bb 0 insn -1) }
;;   reg 31 { d105(bb 0 insn -1) }
;;   reg 64 { d210(bb 0 insn -1) }
;;   reg 65 { d211(bb 0 insn -1) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(29){ d99(bb 0 insn -1) }u-1(31){ d105(bb 0 insn -1) }u-1(64){ d210(bb 0 insn -1) }u-1(65){ d211(bb 0 insn -1) }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 98
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 98
;; lr  def 	 94 96 97
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 98
;; live  gen 	 94 96 97
;; live  kill	
;; rd  in  	(5) 29[99],31[105],64[210],65[211],98[301]
;; rd  gen 	(3) 94[295],96[298],97[300]
;; rd  kill	(6) 94[295],96[296,297,298],97[299,300]
;;  UD chains for artificial uses at top
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 94 96 97
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 94 96 97
;; rd  out 	(7) 29[99],31[105],64[210],65[211],94[295],96[298],97[300]
;;  UD chains for artificial uses at bottom
;;   reg 29 { d99(bb 0 insn -1) }
;;   reg 31 { d105(bb 0 insn -1) }
;;   reg 64 { d210(bb 0 insn -1) }
;;   reg 65 { d211(bb 0 insn -1) }

( 4 3 )->[4]->( 4 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(29){ d99(bb 0 insn -1) }u-1(31){ d105(bb 0 insn -1) }u-1(64){ d210(bb 0 insn -1) }u-1(65){ d211(bb 0 insn -1) }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 94 96 97
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 94 96 97
;; lr  def 	 66 [cc] 96 97
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 94 96 97
;; live  gen 	 66 [cc] 96 97
;; live  kill	
;; rd  in  	(10) 29[99],31[105],64[210],65[211],66[216],94[295],96[297,298],97[299,300]
;; rd  gen 	(3) 66[216],96[297],97[299]
;; rd  kill	(12) 66[212,213,214,215,216,217,218],96[296,297,298],97[299,300]
;;  UD chains for artificial uses at top
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 94 96 97
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 94 96 97
;; rd  out 	(7) 29[99],31[105],64[210],65[211],94[295],96[297],97[299]
;;  UD chains for artificial uses at bottom
;;   reg 29 { d99(bb 0 insn -1) }
;;   reg 31 { d105(bb 0 insn -1) }
;;   reg 64 { d210(bb 0 insn -1) }
;;   reg 65 { d211(bb 0 insn -1) }

( 2 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(29){ d99(bb 0 insn -1) }u-1(31){ d105(bb 0 insn -1) }u-1(64){ d210(bb 0 insn -1) }u-1(65){ d211(bb 0 insn -1) }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 96
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 96
;; live  kill	
;; rd  in  	(5) 29[99],31[105],64[210],65[211],98[301]
;; rd  gen 	(1) 96[296]
;; rd  kill	(3) 96[296,297,298]
;;  UD chains for artificial uses at top
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 96
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 96
;; rd  out 	(5) 29[99],31[105],64[210],65[211],96[296]
;;  UD chains for artificial uses at bottom
;;   reg 29 { d99(bb 0 insn -1) }
;;   reg 31 { d105(bb 0 insn -1) }
;;   reg 64 { d210(bb 0 insn -1) }
;;   reg 65 { d211(bb 0 insn -1) }

( 5 4 )->[6]->( 8 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(29){ d99(bb 0 insn -1) }u-1(31){ d105(bb 0 insn -1) }u-1(64){ d210(bb 0 insn -1) }u-1(65){ d211(bb 0 insn -1) }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 96
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 96
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 67 [vg] 68 [p0] 69 [p1] 70 [p2] 71 [p3] 72 [p4] 73 [p5] 74 [p6] 75 [p7] 76 [p8] 77 [p9] 78 [p10] 79 [p11] 80 [p12] 81 [p13] 82 [p14] 83 [p15] 84 [ffr] 85 [ffrt] 105 106 107 108 110 111
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 96
;; live  gen 	 0 [x0] 1 [x1] 66 [cc] 105 106 107 108 110 111
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(8) 29[99],31[105],64[210],65[211],94[295],96[296,297],97[299]
;; rd  gen 	(8) 0[2],66[213],105[307],106[308],107[309],108[310],110[311],111[312]
;; rd  kill	(26) 0[0,1,2,3,4,5,6,7],30[100,101,102,103,104],66[212,213,214,215,216,217,218],105[307],106[308],107[309],108[310],110[311],111[312]
;;  UD chains for artificial uses at top
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; rd  out 	(4) 29[99],31[105],64[210],65[211]
;;  UD chains for artificial uses at bottom
;;   reg 29 { d99(bb 0 insn -1) }
;;   reg 31 { d105(bb 0 insn -1) }
;;   reg 64 { d210(bb 0 insn -1) }
;;   reg 65 { d211(bb 0 insn -1) }

( 6 )->[7]->( )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(29){ d99(bb 0 insn -1) }u-1(31){ d105(bb 0 insn -1) }u-1(64){ d210(bb 0 insn -1) }u-1(65){ d211(bb 0 insn -1) }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 67 [vg] 68 [p0] 69 [p1] 70 [p2] 71 [p3] 72 [p4] 73 [p5] 74 [p6] 75 [p7] 76 [p8] 77 [p9] 78 [p10] 79 [p11] 80 [p12] 81 [p13] 82 [p14] 83 [p15] 84 [ffr] 85 [ffrt]
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(4) 29[99],31[105],64[210],65[211]
;; rd  gen 	(0) 
;; rd  kill	(5) 30[100,101,102,103,104]
;;  UD chains for artificial uses at top
;; lr  out 	 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 31 [sp] 64 [sfp] 65 [ap]
;; rd  out 	(3) 31[105],64[210],65[211]
;;  UD chains for artificial uses at bottom
;;   reg 29 { d99(bb 0 insn -1) }
;;   reg 31 { d105(bb 0 insn -1) }
;;   reg 64 { d210(bb 0 insn -1) }
;;   reg 65 { d211(bb 0 insn -1) }

( 6 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(29){ d99(bb 0 insn -1) }u-1(31){ d105(bb 0 insn -1) }u-1(64){ d210(bb 0 insn -1) }u-1(65){ d211(bb 0 insn -1) }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0]
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 0 [x0]
;; live  kill	
;; rd  in  	(4) 29[99],31[105],64[210],65[211]
;; rd  gen 	(1) 0[0]
;; rd  kill	(8) 0[0,1,2,3,4,5,6,7]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; rd  out 	(5) 0[0],29[99],31[105],64[210],65[211]
;;  UD chains for artificial uses at bottom
;;   reg 29 { d99(bb 0 insn -1) }
;;   reg 31 { d105(bb 0 insn -1) }
;;   reg 64 { d210(bb 0 insn -1) }
;;   reg 65 { d211(bb 0 insn -1) }

( 8 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ d0(bb 8 insn 54) }u-1(29){ d99(bb 0 insn -1) }u-1(31){ d105(bb 0 insn -1) }u-1(64){ d210(bb 0 insn -1) }}
;; lr  in  	 0 [x0] 29 [x29] 31 [sp] 64 [sfp]
;; lr  use 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp]
;; lr  def 	
;; live  in  	 0 [x0] 29 [x29] 31 [sp] 64 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],29[99],31[105],64[210],65[211]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d0(bb 8 insn 54) }
;;   reg 29 { d99(bb 0 insn -1) }
;;   reg 31 { d105(bb 0 insn -1) }
;;   reg 64 { d210(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 21 to worklist
  Adding insn 16 to worklist
  Adding insn 5 to worklist
  Adding insn 29 to worklist
  Adding insn 50 to worklist
  Adding insn 49 to worklist
  Adding insn 42 to worklist
  Adding insn 36 to worklist
  Adding insn 51 to worklist
  Adding insn 55 to worklist
Finished finding needed instructions:
  Adding insn 54 to worklist
Processing use of (reg 0 x0) in insn 55:
Processing use of (reg 31 sp) in insn 51:
Processing use of (reg 31 sp) in insn 36:
Processing use of (reg 0 x0) in insn 36:
  Adding insn 35 to worklist
Processing use of (reg 1 x1) in insn 36:
  Adding insn 34 to worklist
Processing use of (reg 96 [ f ]) in insn 34:
  Adding insn 25 to worklist
  Adding insn 8 to worklist
Processing use of (reg 96 [ f ]) in insn 25:
  Adding insn 6 to worklist
Processing use of (reg 97 [ i ]) in insn 25:
  Adding insn 7 to worklist
  Adding insn 26 to worklist
Processing use of (reg 97 [ i ]) in insn 26:
Processing use of (reg 105) in insn 35:
  Adding insn 33 to worklist
Processing use of (reg 106) in insn 33:
  Adding insn 32 to worklist
Processing use of (reg 31 sp) in insn 42:
Processing use of (reg 0 x0) in insn 42:
Processing use of (reg 1 x1) in insn 42:
  Adding insn 40 to worklist
Processing use of (reg 107) in insn 40:
  Adding insn 39 to worklist
Processing use of (reg 108) in insn 39:
  Adding insn 38 to worklist
Processing use of (reg 64 sfp) in insn 49:
Processing use of (reg 110) in insn 49:
  Adding insn 48 to worklist
Processing use of (reg 111) in insn 48:
  Adding insn 47 to worklist
Processing use of (reg 66 cc) in insn 50:
Processing use of (reg 66 cc) in insn 29:
  Adding insn 28 to worklist
Processing use of (reg 94 [ _6 ]) in insn 28:
  Adding insn 23 to worklist
Processing use of (reg 97 [ i ]) in insn 28:
Processing use of (reg 98 [ n.0_14 ]) in insn 23:
  Adding insn 17 to worklist
Processing use of (reg 64 sfp) in insn 17:
Processing use of (reg 64 sfp) in insn 5:
Processing use of (reg 100) in insn 5:
  Adding insn 4 to worklist
Processing use of (reg 101) in insn 4:
  Adding insn 3 to worklist
Processing use of (reg 31 sp) in insn 16:
Processing use of (reg 0 x0) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 1 x1) in insn 16:
  Adding insn 14 to worklist
Processing use of (reg 102) in insn 14:
  Adding insn 11 to worklist
Processing use of (reg 64 sfp) in insn 11:
Processing use of (reg 103) in insn 15:
  Adding insn 13 to worklist
Processing use of (reg 104) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 66 cc) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 98 [ n.0_14 ]) in insn 20:
starting the processing of deferred insns
ending the processing of deferred insns


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 67 [vg] 68 [p0] 69 [p1] 70 [p2] 71 [p3] 72 [p4] 73 [p5] 74 [p6] 75 [p7] 76 [p8] 77 [p9] 78 [p10] 79 [p11] 80 [p12] 81 [p13] 82 [p14] 83 [p15] 84 [ffr] 85 [ffrt]
;;  hardware regs used 	 31 [sp] 64 [sfp] 65 [ap]
;;  regular block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  eh block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  entry block defs 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 64 [sfp] 65 [ap]
;;  exit block uses 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp]
;;  regs ever live 	 0 [x0] 1 [x1] 16 [x16] 17 [x17] 30 [x30] 31 [sp] 66 [cc]
;;  ref usage 	r0={8d,5u} r1={8d,3u} r2={5d} r3={5d} r4={5d} r5={5d} r6={5d} r7={5d} r8={5d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={8d} r17={8d} r18={4d} r29={1d,8u} r30={5d} r31={1d,12u} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={1d,12u,1e} r65={1d,7u} r66={7d,3u} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r94={1d,1u} r96={3d,2u} r97={2d,3u} r98={1d,2u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r110={1d,1u} r111={1d,1u} 
;;    total ref usage 383{313d,69u,1e} in 36{32 regular + 4 call} insns.
(note 9 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 9 3 2 NOTE_INSN_FUNCTION_BEG)
(insn 3 2 4 2 (set (reg/f:DI 101)
        (high:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__stack_chk_guard") [flags 0xc0]  <var_decl 0xffffa16a1ab0 __stack_chk_guard>)
                        (const_int 0 [0])
                    ] UNSPEC_SALT_ADDR)))) "mul.cpp":4:1 53 {*movdi_aarch64}
     (nil))
(insn 4 3 5 2 (set (reg/f:DI 100)
        (unspec:DI [
                (mem/u/c:DI (lo_sum:DI (reg/f:DI 101)
                        (const:DI (unspec:DI [
                                    (symbol_ref:DI ("__stack_chk_guard") [flags 0xc0]  <var_decl 0xffffa16a1ab0 __stack_chk_guard>)
                                    (const_int 0 [0])
                                ] UNSPEC_SALT_ADDR))) [0  S8 A8])
            ] UNSPEC_GOTSMALLPIC)) "mul.cpp":4:1 1016 {ldr_got_small_di}
     (expr_list:REG_DEAD (reg/f:DI 101)
        (expr_list:REG_EQUAL (const:DI (unspec:DI [
                        (symbol_ref:DI ("__stack_chk_guard") [flags 0xc0]  <var_decl 0xffffa16a1ab0 __stack_chk_guard>)
                        (const_int 0 [0])
                    ] UNSPEC_SALT_ADDR))
            (nil))))
(insn 5 4 11 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 64 sfp)
                        (const_int -8 [0xfffffffffffffff8])) [14 D.51738+0 S8 A64])
                (unspec:DI [
                        (mem:DI (reg/f:DI 100) [0  S8 A8])
                    ] UNSPEC_SP_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
        ]) "mul.cpp":4:1 1063 {stack_protect_set_di}
     (expr_list:REG_DEAD (reg/f:DI 100)
        (nil)))
(insn 11 5 12 2 (set (reg/f:DI 102)
        (plus:DI (reg/f:DI 64 sfp)
            (const_int -12 [0xfffffffffffffff4]))) "mul.cpp":6:10 121 {*adddi3_aarch64}
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 104)
        (high:DI (symbol_ref:DI ("_ZSt3cin") [flags 0xc0]  <var_decl 0xffffa1de6090 cin>))) "mul.cpp":6:10 53 {*movdi_aarch64}
     (nil))
(insn 13 12 14 2 (set (reg/f:DI 103)
        (unspec:DI [
                (mem/u/c:DI (lo_sum:DI (reg/f:DI 104)
                        (symbol_ref:DI ("_ZSt3cin") [flags 0xc0]  <var_decl 0xffffa1de6090 cin>)) [0  S8 A8])
            ] UNSPEC_GOTSMALLPIC)) "mul.cpp":6:10 1016 {ldr_got_small_di}
     (expr_list:REG_DEAD (reg/f:DI 104)
        (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt3cin") [flags 0xc0]  <var_decl 0xffffa1de6090 cin>)
            (nil))))
(insn 14 13 15 2 (set (reg:DI 1 x1)
        (reg/f:DI 102)) "mul.cpp":6:10 53 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 102)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 64 sfp)
                (const_int -12 [0xfffffffffffffff4]))
            (nil))))
(insn 15 14 16 2 (set (reg:DI 0 x0)
        (reg/f:DI 103)) "mul.cpp":6:10 53 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 103)
        (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt3cin") [flags 0xc0]  <var_decl 0xffffa1de6090 cin>)
            (nil))))
(call_insn 16 15 17 2 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("_ZNSirsERi") [flags 0x41]  <function_decl 0xffffa1cde700 operator>>>) [0 operator>> S8 A8])
                    (const_int 0 [0])))
            (unspec:DI [
                    (const_int 0 [0])
                ] UNSPEC_CALLEE_ABI)
            (clobber (reg:DI 30 x30))
        ]) "mul.cpp":6:10 47 {*call_value_insn}
     (expr_list:REG_DEAD (reg:DI 1 x1)
        (expr_list:REG_UNUSED (reg:DI 0 x0)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSirsERi") [flags 0x41]  <function_decl 0xffffa1cde700 operator>>>)
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (nil))))))
(insn 17 16 20 2 (set (reg:SI 98 [ n.0_14 ])
        (mem/c:SI (plus:DI (reg/f:DI 64 sfp)
                (const_int -12 [0xfffffffffffffff4])) [5 n+0 S4 A32])) "mul.cpp":9:12 52 {*movsi_aarch64}
     (nil))
(insn 20 17 21 2 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 98 [ n.0_14 ])
            (const_int 1 [0x1]))) "mul.cpp":9:12 403 {cmpsi}
     (nil))
(jump_insn 21 20 22 2 (set (pc)
        (if_then_else (le (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 61)
            (pc))) "mul.cpp":9:12 15 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 118111604 (nil)))
 -> 61)
(note 22 21 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 6 3 (set (reg:SI 94 [ _6 ])
        (plus:SI (reg:SI 98 [ n.0_14 ])
            (const_int 1 [0x1]))) 120 {*addsi3_aarch64}
     (expr_list:REG_DEAD (reg:SI 98 [ n.0_14 ])
        (nil)))
(insn 6 23 7 3 (set (reg/v:SI 96 [ f ])
        (const_int 1 [0x1])) "mul.cpp":8:6 52 {*movsi_aarch64}
     (nil))
(insn 7 6 27 3 (set (reg/v:SI 97 [ i ])
        (const_int 2 [0x2])) "mul.cpp":7:6 52 {*movsi_aarch64}
     (nil))
(code_label 27 7 24 4 6 (nil) [1 uses])
(note 24 27 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 4 (set (reg/v:SI 96 [ f ])
        (mult:SI (reg/v:SI 96 [ f ])
            (reg/v:SI 97 [ i ]))) "mul.cpp":11:10 375 {mulsi3}
     (nil))
(insn 26 25 28 4 (set (reg/v:SI 97 [ i ])
        (plus:SI (reg/v:SI 97 [ i ])
            (const_int 1 [0x1]))) "mul.cpp":12:10 120 {*addsi3_aarch64}
     (nil))
(insn 28 26 29 4 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 94 [ _6 ])
            (reg/v:SI 97 [ i ]))) "mul.cpp":9:12 403 {cmpsi}
     (nil))
(jump_insn 29 28 61 4 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 27)
            (pc))) "mul.cpp":9:12 15 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 27)
      ; pc falls through to BB 6
(code_label 61 29 60 5 8 (nil) [1 uses])
(note 60 61 8 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 8 60 30 5 (set (reg/v:SI 96 [ f ])
        (const_int 1 [0x1])) "mul.cpp":8:6 52 {*movsi_aarch64}
     (nil))
(code_label 30 8 31 6 5 (nil) [0 uses])
(note 31 30 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 6 (set (reg/f:DI 106)
        (high:DI (symbol_ref:DI ("_ZSt4cout") [flags 0xc0]  <var_decl 0xffffa1de6120 cout>))) "mul.cpp":14:11 53 {*movdi_aarch64}
     (nil))
(insn 33 32 34 6 (set (reg/f:DI 105)
        (unspec:DI [
                (mem/u/c:DI (lo_sum:DI (reg/f:DI 106)
                        (symbol_ref:DI ("_ZSt4cout") [flags 0xc0]  <var_decl 0xffffa1de6120 cout>)) [0  S8 A8])
            ] UNSPEC_GOTSMALLPIC)) "mul.cpp":14:11 1016 {ldr_got_small_di}
     (expr_list:REG_DEAD (reg/f:DI 106)
        (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0xc0]  <var_decl 0xffffa1de6120 cout>)
            (nil))))
(insn 34 33 35 6 (set (reg:SI 1 x1)
        (reg/v:SI 96 [ f ])) "mul.cpp":14:11 52 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg/v:SI 96 [ f ])
        (nil)))
(insn 35 34 36 6 (set (reg:DI 0 x0)
        (reg/f:DI 105)) "mul.cpp":14:11 53 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 105)
        (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0xc0]  <var_decl 0xffffa1de6120 cout>)
            (nil))))
(call_insn 36 35 38 6 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0xffffa1c41700 operator<<>) [0 operator<< S8 A8])
                    (const_int 0 [0])))
            (unspec:DI [
                    (const_int 0 [0])
                ] UNSPEC_CALLEE_ABI)
            (clobber (reg:DI 30 x30))
        ]) "mul.cpp":14:11 47 {*call_value_insn}
     (expr_list:REG_DEAD (reg:SI 1 x1)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0xffffa1c41700 operator<<>)
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (nil))))))
(insn 38 36 39 6 (set (reg/f:DI 108)
        (high:DI (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0xffffa1c54800 endl>))) "mul.cpp":14:14 53 {*movdi_aarch64}
     (nil))
(insn 39 38 40 6 (set (reg/f:DI 107)
        (unspec:DI [
                (mem/u/c:DI (lo_sum:DI (reg/f:DI 108)
                        (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0xffffa1c54800 endl>)) [0  S8 A8])
            ] UNSPEC_GOTSMALLPIC)) "mul.cpp":14:14 1016 {ldr_got_small_di}
     (expr_list:REG_DEAD (reg/f:DI 108)
        (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0xffffa1c54800 endl>)
            (nil))))
(insn 40 39 42 6 (set (reg:DI 1 x1)
        (reg/f:DI 107)) "mul.cpp":14:14 53 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 107)
        (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0xffffa1c54800 endl>)
            (nil))))
(call_insn 42 40 47 6 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("_ZNSolsEPFRSoS_E") [flags 0x41]  <function_decl 0xffffa1c01c00 operator<<>) [0 operator<< S8 A8])
                    (const_int 0 [0])))
            (unspec:DI [
                    (const_int 0 [0])
                ] UNSPEC_CALLEE_ABI)
            (clobber (reg:DI 30 x30))
        ]) "mul.cpp":14:14 47 {*call_value_insn}
     (expr_list:REG_DEAD (reg:DI 1 x1)
        (expr_list:REG_UNUSED (reg:DI 0 x0)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSolsEPFRSoS_E") [flags 0x41]  <function_decl 0xffffa1c01c00 operator<<>)
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (nil))))))
(insn 47 42 48 6 (set (reg/f:DI 111)
        (high:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__stack_chk_guard") [flags 0xc0]  <var_decl 0xffffa16a1ab0 __stack_chk_guard>)
                        (const_int 1 [0x1])
                    ] UNSPEC_SALT_ADDR)))) "mul.cpp":16:1 53 {*movdi_aarch64}
     (nil))
(insn 48 47 49 6 (set (reg/f:DI 110)
        (unspec:DI [
                (mem/u/c:DI (lo_sum:DI (reg/f:DI 111)
                        (const:DI (unspec:DI [
                                    (symbol_ref:DI ("__stack_chk_guard") [flags 0xc0]  <var_decl 0xffffa16a1ab0 __stack_chk_guard>)
                                    (const_int 1 [0x1])
                                ] UNSPEC_SALT_ADDR))) [0  S8 A8])
            ] UNSPEC_GOTSMALLPIC)) "mul.cpp":16:1 1016 {ldr_got_small_di}
     (expr_list:REG_DEAD (reg/f:DI 111)
        (expr_list:REG_EQUAL (const:DI (unspec:DI [
                        (symbol_ref:DI ("__stack_chk_guard") [flags 0xc0]  <var_decl 0xffffa16a1ab0 __stack_chk_guard>)
                        (const_int 1 [0x1])
                    ] UNSPEC_SALT_ADDR))
            (nil))))
(insn 49 48 50 6 (parallel [
            (set (reg:CC 66 cc)
                (unspec:CC [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 64 sfp)
                                (const_int -8 [0xfffffffffffffff8])) [14 D.51738+0 S8 A64])
                        (mem:DI (reg/f:DI 110) [0  S8 A8])
                    ] UNSPEC_SP_TEST))
            (clobber (scratch:DI))
            (clobber (scratch:DI))
        ]) "mul.cpp":16:1 1065 {stack_protect_test_di}
     (expr_list:REG_DEAD (reg/f:DI 110)
        (nil)))
(jump_insn 50 49 62 6 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 53)
            (pc))) "mul.cpp":16:1 15 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 1073312332 (nil)))
 -> 53)
(note 62 50 51 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(call_insn 51 62 53 7 (parallel [
            (call (mem:DI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0xffffa16ca000 __stack_chk_fail>) [0 __stack_chk_fail S8 A8])
                (const_int 0 [0]))
            (unspec:DI [
                    (const_int 0 [0])
                ] UNSPEC_CALLEE_ABI)
            (clobber (reg:DI 30 x30))
        ]) "mul.cpp":16:1 46 {*call_insn}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0xffffa16ca000 __stack_chk_fail>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
(code_label 53 51 63 8 7 (nil) [1 uses])
(note 63 53 54 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 54 63 55 8 (set (reg/i:SI 0 x0)
        (const_int 0 [0])) "mul.cpp":16:1 52 {*movsi_aarch64}
     (nil))
(insn 55 54 0 8 (use (reg/i:SI 0 x0)) "mul.cpp":16:1 -1
     (nil))

;; Function _GLOBAL__sub_I_main (_GLOBAL__sub_I_main, funcdef_no=2277, decl_uid=51661, cgraph_uid=1011, symbol_order=1186) (executed once)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)


_GLOBAL__sub_I_main

Dataflow summary:
;;  fully invalidated by EH 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 67 [vg] 68 [p0] 69 [p1] 70 [p2] 71 [p3] 72 [p4] 73 [p5] 74 [p6] 75 [p7] 76 [p8] 77 [p9] 78 [p10] 79 [p11] 80 [p12] 81 [p13] 82 [p14] 83 [p15] 84 [ffr] 85 [ffrt]
;;  hardware regs used 	 31 [sp] 64 [sfp] 65 [ap]
;;  regular block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  eh block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  entry block defs 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 64 [sfp] 65 [ap]
;;  exit block uses 	 29 [x29] 31 [sp] 64 [sfp]
;;  regs ever live 	 16 [x16] 17 [x17] 31 [sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r3={2d} r4={2d} r5={2d} r6={2d} r7={2d} r8={2d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={2d} r17={2d} r18={1d} r29={1d,2u} r30={2d} r31={1d,3u} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d,2u} r65={1d,1u} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} 
;;    total ref usage 96{88d,8u,0e} in 1{0 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87
;;  reg->defs[] map:	0[0,1] 1[2,3] 2[4,5] 3[6,7] 4[8,9] 5[10,11] 6[12,13] 7[14,15] 8[16,17] 9[18,18] 10[19,19] 11[20,20] 12[21,21] 13[22,22] 14[23,23] 15[24,24] 16[25,26] 17[27,28] 18[29,29] 29[30,30] 30[31,32] 31[33,33] 32[34,35] 33[36,37] 34[38,39] 35[40,41] 36[42,43] 37[44,45] 38[46,47] 39[48,49] 48[50,50] 49[51,51] 50[52,52] 51[53,53] 52[54,54] 53[55,55] 54[56,56] 55[57,57] 56[58,58] 57[59,59] 58[60,60] 59[61,61] 60[62,62] 61[63,63] 62[64,64] 63[65,65] 64[66,66] 65[67,67] 66[68,68] 67[69,69] 68[70,70] 69[71,71] 70[72,72] 71[73,73] 72[74,74] 73[75,75] 74[76,76] 75[77,77] 76[78,78] 77[79,79] 78[80,80] 79[81,81] 80[82,82] 81[83,83] 82[84,84] 83[85,85] 84[86,86] 85[87,87] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d3(1){ }d5(2){ }d7(3){ }d9(4){ }d11(5){ }d13(6){ }d15(7){ }d17(8){ }d30(29){ }d32(30){ }d33(31){ }d35(32){ }d37(33){ }d39(34){ }d41(35){ }d43(36){ }d45(37){ }d47(38){ }d49(39){ }d66(64){ }d67(65){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 64 [sfp] 65 [ap]
;; live  in  	
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 64 [sfp] 65 [ap]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(22) 0[1],1[3],2[5],3[7],4[9],5[11],6[13],7[15],8[17],29[30],30[32],31[33],32[35],33[37],34[39],35[41],36[43],37[45],38[47],39[49],64[66],65[67]
;; rd  kill	(40) 0[0,1],1[2,3],2[4,5],3[6,7],4[8,9],5[10,11],6[12,13],7[14,15],8[16,17],29[30],30[31,32],31[33],32[34,35],33[36,37],34[38,39],35[40,41],36[42,43],37[44,45],38[46,47],39[48,49],64[66],65[67]
;;  UD chains for artificial uses at top
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; rd  out 	(4) 29[30],31[33],64[66],65[67]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(29){ d30(bb 0 insn -1) }u-1(31){ d33(bb 0 insn -1) }u-1(64){ d66(bb 0 insn -1) }u-1(65){ d67(bb 0 insn -1) }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 67 [vg] 68 [p0] 69 [p1] 70 [p2] 71 [p3] 72 [p4] 73 [p5] 74 [p6] 75 [p7] 76 [p8] 77 [p9] 78 [p10] 79 [p11] 80 [p12] 81 [p13] 82 [p14] 83 [p15] 84 [ffr] 85 [ffrt]
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	
;; live  kill	 16 [x16] 17 [x17]
;; rd  in  	(4) 29[30],31[33],64[66],65[67]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; rd  out 	(4) 29[30],31[33],64[66],65[67]
;;  UD chains for artificial uses at bottom
;;   reg 29 { d30(bb 0 insn -1) }
;;   reg 31 { d33(bb 0 insn -1) }
;;   reg 64 { d66(bb 0 insn -1) }
;;   reg 65 { d67(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(29){ d30(bb 0 insn -1) }u-1(31){ d33(bb 0 insn -1) }u-1(64){ d66(bb 0 insn -1) }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp]
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp]
;; lr  def 	
;; live  in  	 29 [x29] 31 [sp] 64 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 29[30],31[33],64[66],65[67]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 29 { d30(bb 0 insn -1) }
;;   reg 31 { d33(bb 0 insn -1) }
;;   reg 64 { d66(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 5 to worklist
Finished finding needed instructions:
Processing use of (reg 31 sp) in insn 5:
starting the processing of deferred insns
ending the processing of deferred insns


_GLOBAL__sub_I_main

Dataflow summary:
;;  fully invalidated by EH 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 67 [vg] 68 [p0] 69 [p1] 70 [p2] 71 [p3] 72 [p4] 73 [p5] 74 [p6] 75 [p7] 76 [p8] 77 [p9] 78 [p10] 79 [p11] 80 [p12] 81 [p13] 82 [p14] 83 [p15] 84 [ffr] 85 [ffrt]
;;  hardware regs used 	 31 [sp] 64 [sfp] 65 [ap]
;;  regular block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  eh block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  entry block defs 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 64 [sfp] 65 [ap]
;;  exit block uses 	 29 [x29] 31 [sp] 64 [sfp]
;;  regs ever live 	 16 [x16] 17 [x17] 31 [sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r3={2d} r4={2d} r5={2d} r6={2d} r7={2d} r8={2d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={2d} r17={2d} r18={1d} r29={1d,2u} r30={2d} r31={1d,3u} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d,2u} r65={1d,1u} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} 
;;    total ref usage 96{88d,8u,0e} in 1{0 regular + 1 call} insns.
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(call_insn/j 5 2 0 2 (parallel [
            (call (mem:DI (symbol_ref:DI ("_Z41__static_initialization_and_destruction_0ii.constprop.0") [flags 0x3]  <function_decl 0xffffa16a3500 __static_initialization_and_destruction_0.constprop>) [0 __static_initialization_and_destruction_0.constprop S8 A8])
                (const_int 0 [0]))
            (unspec:DI [
                    (const_int 0 [0])
                ] UNSPEC_CALLEE_ABI)
            (return)
        ]) "mul.cpp":16:1 48 {*sibcall_insn}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z41__static_initialization_and_destruction_0ii.constprop.0") [flags 0x3]  <function_decl 0xffffa16a3500 __static_initialization_and_destruction_0.constprop>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
