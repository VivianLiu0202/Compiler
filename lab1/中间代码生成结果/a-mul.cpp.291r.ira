
;; Function __static_initialization_and_destruction_0.constprop (_Z41__static_initialization_and_destruction_0ii.constprop.0, funcdef_no=2278, decl_uid=51721, cgraph_uid=1022, symbol_order=1200) (executed once)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 93 uninteresting
Reg 92 uninteresting
Reg 99: local to bb 2 def dominates all uses has unique first use
Reg 95 uninteresting
Ignoring reg 99 with equiv init insn
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 93: (insn_list:REG_DEP_TRUE 5 (nil))
init_insns for 95: (insn_list:REG_DEP_TRUE 9 (nil))
init_insns for 99: (insn_list:REG_DEP_TRUE 13 (nil))

Pass 1 for finding pseudo/allocno costs

    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS

  a0(r99,l0) costs: GENERAL_REGS:0,0 FP_LO8_REGS:10000,10000 FP_LO_REGS:10000,10000 FP_REGS:10000,10000 POINTER_AND_FP_REGS:10000,10000 MEM:8000,8000
  a1(r95,l0) costs: GENERAL_REGS:0,0 FP_LO8_REGS:10000,10000 FP_LO_REGS:10000,10000 FP_REGS:10000,10000 POINTER_AND_FP_REGS:10000,10000 MEM:8000,8000
  a2(r92,l0) costs: GENERAL_REGS:2000,2000 FP_LO8_REGS:25000,25000 FP_LO_REGS:25000,25000 FP_REGS:25000,25000 POINTER_AND_FP_REGS:15000,15000 MEM:20000,20000
  a3(r93,l0) costs: GENERAL_REGS:0,0 FP_LO8_REGS:10000,10000 FP_LO_REGS:10000,10000 FP_REGS:10000,10000 POINTER_AND_FP_REGS:10000,10000 MEM:8000,8000

   Insn 18(l0): point = 0
   Insn 17(l0): point = 2
   Insn 15(l0): point = 4
   Insn 9(l0): point = 6
   Insn 16(l0): point = 8
   Insn 13(l0): point = 10
   Insn 8(l0): point = 12
   Insn 7(l0): point = 14
   Insn 6(l0): point = 16
   Insn 5(l0): point = 18
 a0(r99): [3..10]
 a1(r95): [5..6]
 a2(r92): [9..16]
 a3(r93): [17..18]
Compressing live ranges: from 21 to 6 - 28%
Ranges after the compression:
 a0(r99): [0..3]
 a1(r95): [0..1]
 a2(r92): [2..3]
 a3(r93): [4..5]
+++Allocating 24 bytes for conflict table (uncompressed size 32)
;; a0(r99,l0) conflicts: a1(r95,l0) a2(r92,l0)
;;     total conflict hard regs: 1-2
;;     conflict hard regs: 1-2

;; a1(r95,l0) conflicts: a0(r99,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

;; a2(r92,l0) conflicts: a0(r99,l0)
;;     total conflict hard regs: 16-17 30
;;     conflict hard regs: 16-17 30

;; a3(r93,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:


  cp0:a2(r92)<->a3(r93)@125:shuffle
  pref0:a2(r92)<-hr0@1000
  pref1:a2(r92)<-hr1@2000
  pref2:a1(r95)<-hr2@125
  pref3:a0(r99)<-hr0@125
  regions=1, blocks=3, points=6
    allocnos=4 (big 0), copies=1, conflicts=0, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r99 1r95 2r92 3r93
    modified regnos: 92 93 95 99
    border:
    Pressure: GENERAL_REGS=5
    Hard reg set forest:
      0:( 0-28 30 32-63)@0
        1:( 0-28 30)@16000
          2:( 0-15 18-28)@36000
      Allocno a0r99 of GENERAL_REGS(30) has 28 avail. regs  0 3-28 30, ^node:  0-28 30 (confl regs =  1-2 29 31-85)
      Allocno a1r95 of GENERAL_REGS(30) has 29 avail. regs  0 2-28 30, ^node:  0-28 30 (confl regs =  1 29 31-85)
      Allocno a2r92 of GENERAL_REGS(30) has 27 avail. regs  0-15 18-28, node:  0-15 18-28 (confl regs =  16-17 29-85)
      Allocno a3r93 of GENERAL_REGS(30) has 30 avail. regs  0-28 30, node:  0-28 30 (confl regs =  29 31-85)
      Forming thread from colorable bucket:
        Forming thread by copy 0:a2r92-a3r93 (freq=125):
          Result (freq=5000): a2r92(3000) a3r93(2000)
      Pushing a1(r95,l0)(cost 0)
      Pushing a0(r99,l0)(cost 0)
      Pushing a3(r93,l0)(cost 0)
      Pushing a2(r92,l0)(cost 0)
      Popping a2(r92,l0)  --         assign reg 19
      Popping a3(r93,l0)  --         assign reg 19
      Popping a0(r99,l0)  --         assign reg 0
      Popping a1(r95,l0)  --         assign reg 2
Disposition:
    2:r92  l0    19    3:r93  l0    19    1:r95  l0     2    0:r99  l0     0
New iteration of spill/restore move
+++Costs: overall 1750, reg 1750, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


__static_initialization_and_destruction_0.constprop

Dataflow summary:
;;  fully invalidated by EH 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 67 [vg] 68 [p0] 69 [p1] 70 [p2] 71 [p3] 72 [p4] 73 [p5] 74 [p6] 75 [p7] 76 [p8] 77 [p9] 78 [p10] 79 [p11] 80 [p12] 81 [p13] 82 [p14] 83 [p15] 84 [ffr] 85 [ffrt]
;;  hardware regs used 	 31 [sp] 64 [sfp] 65 [ap]
;;  regular block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  eh block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  entry block defs 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 64 [sfp] 65 [ap]
;;  exit block uses 	 29 [x29] 31 [sp] 64 [sfp]
;;  regs ever live 	 0 [x0] 1 [x1] 2 [x2] 16 [x16] 17 [x17] 30 [x30] 31 [sp]
;;  ref usage 	r0={5d,2u} r1={4d,1u} r2={4d,1u} r3={3d} r4={3d} r5={3d} r6={3d} r7={3d} r8={3d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={4d} r17={4d} r18={2d} r29={1d,2u} r30={3d} r31={1d,4u} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={1d,2u} r65={1d,1u} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r92={1d,2u} r93={1d,1u} r95={1d,1u} r99={1d,1u} 
;;    total ref usage 180{162d,18u,0e} in 10{8 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 10 2 NOTE_INSN_FUNCTION_BEG)
(note 10 2 14 2 NOTE_INSN_DELETED)
(note 14 10 5 2 NOTE_INSN_DELETED)
(insn 5 14 6 2 (set (reg/f:DI 93)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) "/usr/include/c++/11/iostream":74:25 53 {*movdi_aarch64}
     (expr_list:REG_EQUIV (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))
        (nil)))
(insn 6 5 7 2 (set (reg/f:DI 92)
        (lo_sum:DI (reg/f:DI 93)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) "/usr/include/c++/11/iostream":74:25 1014 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 93)
        (expr_list:REG_EQUIV (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
            (nil))))
(insn 7 6 8 2 (set (reg:DI 0 x0)
        (reg/f:DI 92)) "/usr/include/c++/11/iostream":74:25 53 {*movdi_aarch64}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(call_insn 8 7 13 2 (parallel [
            (call (mem:DI (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0xffffa23fbb00 __ct_comp >) [0 __ct_comp  S8 A8])
                (const_int 0 [0]))
            (unspec:DI [
                    (const_int 0 [0])
                ] UNSPEC_CALLEE_ABI)
            (clobber (reg:DI 30 x30))
        ]) "/usr/include/c++/11/iostream":74:25 46 {*call_insn}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0xffffa23fbb00 __ct_comp >)
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(insn 13 8 16 2 (set (reg/f:DI 99)
        (high:DI (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0xffffa23fbd00 __dt_comp >))) "/usr/include/c++/11/iostream":74:25 53 {*movdi_aarch64}
     (expr_list:REG_EQUIV (high:DI (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0xffffa23fbd00 __dt_comp >))
        (nil)))
(insn 16 13 9 2 (set (reg:DI 1 x1)
        (reg/f:DI 92)) "/usr/include/c++/11/iostream":74:25 53 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 92)
        (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
            (nil))))
(insn 9 16 15 2 (set (reg/f:DI 95)
        (high:DI (symbol_ref:DI ("__dso_handle") [flags 0xc2]  <var_decl 0xffffa1645120 __dso_handle>))) "/usr/include/c++/11/iostream":74:25 53 {*movdi_aarch64}
     (expr_list:REG_EQUIV (high:DI (symbol_ref:DI ("__dso_handle") [flags 0xc2]  <var_decl 0xffffa1645120 __dso_handle>))
        (nil)))
(insn 15 9 17 2 (set (reg:DI 2 x2)
        (lo_sum:DI (reg/f:DI 95)
            (symbol_ref:DI ("__dso_handle") [flags 0xc2]  <var_decl 0xffffa1645120 __dso_handle>))) "/usr/include/c++/11/iostream":74:25 1014 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 95)
        (expr_list:REG_EQUAL (symbol_ref:DI ("__dso_handle") [flags 0xc2]  <var_decl 0xffffa1645120 __dso_handle>)
            (nil))))
(insn 17 15 18 2 (set (reg:DI 0 x0)
        (unspec:DI [
                (mem/u/c:DI (lo_sum:DI (reg/f:DI 99)
                        (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0xffffa23fbd00 __dt_comp >)) [0  S8 A8])
            ] UNSPEC_GOTSMALLPIC)) "/usr/include/c++/11/iostream":74:25 1016 {ldr_got_small_di}
     (expr_list:REG_DEAD (reg/f:DI 99)
        (expr_list:REG_EQUAL (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0xffffa23fbd00 __dt_comp >)
            (nil))))
(call_insn/j 18 17 19 2 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0xffffa164f200 __cxa_atexit>) [0 __cxa_atexit S8 A8])
                    (const_int 0 [0])))
            (unspec:DI [
                    (const_int 0 [0])
                ] UNSPEC_CALLEE_ABI)
            (return)
        ]) "/usr/include/c++/11/iostream":74:25 49 {*sibcall_value_insn}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:DI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0xffffa164f200 __cxa_atexit>)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(barrier 19 18 0)

;; Function main (main, funcdef_no=1776, decl_uid=46757, cgraph_uid=510, symbol_order=540) (executed once)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 4, latch 4
;;  depth 1, outer 0
;;  nodes: 4
;; 2 succs { 3 6 }
;; 3 succs { 4 }
;; 4 succs { 4 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 9 8 }
;; 8 succs { }
;; 9 succs { 1 }
Removing SCRATCH to p112 in insn #5 (nop 2)
rescanning insn with uid = 5.
Removing SCRATCH to p113 in insn #49 (nop 2)
Removing SCRATCH to p114 in insn #49 (nop 3)
rescanning insn with uid = 49.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 11 count 10 (    1)
Reg 104: local to bb 2 def dominates all uses has unique first use
Reg 101: local to bb 2 def dominates all uses has unique first use
Reg 100 uninteresting
Reg 112 uninteresting (no unique first use)
Reg 98 uninteresting
Reg 94: def dominates all uses has unique first use
Reg 106: local to bb 7 def dominates all uses has unique first use
Reg 108 uninteresting
Reg 111 uninteresting
Reg 110 uninteresting
Reg 94 not local to one basic block
Ignoring reg 101 with equiv init insn
Ignoring reg 104 with equiv init insn
Ignoring reg 106 with equiv init insn
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 4, latch 4
;;  depth 1, outer 0
;;  nodes: 4
;; 2 succs { 3 6 }
;; 3 succs { 4 }
;; 4 succs { 4 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 9 8 }
;; 8 succs { }
;; 9 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 101: (insn_list:REG_DEP_TRUE 3 (nil))
init_insns for 104: (insn_list:REG_DEP_TRUE 12 (nil))
init_insns for 106: (insn_list:REG_DEP_TRUE 32 (nil))
init_insns for 108: (insn_list:REG_DEP_TRUE 38 (nil))
init_insns for 111: (insn_list:REG_DEP_TRUE 47 (nil))

Pass 1 for finding pseudo/allocno costs

    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS

  a0(r110,l0) costs: GENERAL_REGS:0,0 FP_LO8_REGS:1100,1100 FP_LO_REGS:1100,1100 FP_REGS:1100,1100 POINTER_AND_FP_REGS:1100,1100 MEM:880,880
  a1(r113,l0) costs: GENERAL_REGS:0,0 FP_LO8_REGS:550,550 FP_LO_REGS:550,550 FP_REGS:550,550 POINTER_AND_FP_REGS:550,550 MEM:440,440
  a2(r114,l0) costs: GENERAL_REGS:0,0 FP_LO8_REGS:550,550 FP_LO_REGS:550,550 FP_REGS:550,550 POINTER_AND_FP_REGS:550,550 MEM:440,440
  a3(r111,l0) costs: GENERAL_REGS:0,0 FP_LO8_REGS:1100,1100 FP_LO_REGS:1100,1100 FP_REGS:1100,1100 POINTER_AND_FP_REGS:1100,1100 MEM:880,880
  a4(r108,l0) costs: GENERAL_REGS:0,0 FP_LO8_REGS:1100,1100 FP_LO_REGS:1100,1100 FP_REGS:1100,1100 POINTER_AND_FP_REGS:1100,1100 MEM:880,880
  a5(r106,l0) costs: GENERAL_REGS:0,0 FP_LO8_REGS:1100,1100 FP_LO_REGS:1100,1100 FP_REGS:1100,1100 POINTER_AND_FP_REGS:1100,1100 MEM:880,880
  a6(r96,l0) costs: GENERAL_REGS:110,110 FP_LO8_REGS:1645,10545 FP_LO_REGS:1645,10545 FP_REGS:1645,10545 POINTER_AND_FP_REGS:1095,9995 MEM:1316,8436
  a7(r97,l0) costs: GENERAL_REGS:0,0 FP_LO8_REGS:485,18285 FP_LO_REGS:485,18285 FP_REGS:485,18285 POINTER_AND_FP_REGS:485,18285 MEM:388,14628
  a8(r94,l0) costs: GENERAL_REGS:0,0 FP_LO8_REGS:485,4935 FP_LO_REGS:485,4935 FP_REGS:485,4935 POINTER_AND_FP_REGS:485,4935 MEM:388,3948
  a9(r98,l0) costs: GENERAL_REGS:0,0 FP_LO8_REGS:1585,1585 FP_LO_REGS:1585,1585 FP_REGS:1585,1585 POINTER_AND_FP_REGS:1585,1585 MEM:1268,1268
  a10(r100,l0) costs: GENERAL_REGS:0,0 FP_LO8_REGS:1100,1100 FP_LO_REGS:1100,1100 FP_REGS:1100,1100 POINTER_AND_FP_REGS:1100,1100 MEM:880,880
  a11(r112,l0) costs: GENERAL_REGS:0,0 FP_LO8_REGS:550,550 FP_LO_REGS:550,550 FP_REGS:550,550 POINTER_AND_FP_REGS:550,550 MEM:440,440
  a12(r101,l0) costs: GENERAL_REGS:0,0 FP_LO8_REGS:1100,1100 FP_LO_REGS:1100,1100 FP_REGS:1100,1100 POINTER_AND_FP_REGS:1100,1100 MEM:880,880
  a13(r104,l0) costs: GENERAL_REGS:0,0 FP_LO8_REGS:1100,1100 FP_LO_REGS:1100,1100 FP_REGS:1100,1100 POINTER_AND_FP_REGS:1100,1100 MEM:880,880
  a14(r94,l1) costs: GENERAL_REGS:0,0 FP_LO8_REGS:4450,4450 FP_LO_REGS:4450,4450 FP_REGS:4450,4450 POINTER_AND_FP_REGS:4450,4450 MEM:3560,3560
  a15(r96,l1) costs: GENERAL_REGS:0,0 FP_LO8_REGS:8900,8900 FP_LO_REGS:8900,8900 FP_REGS:8900,8900 POINTER_AND_FP_REGS:8900,8900 MEM:7120,7120
  a16(r97,l1) costs: GENERAL_REGS:0,0 FP_LO8_REGS:17800,17800 FP_LO_REGS:17800,17800 FP_REGS:17800,17800 POINTER_AND_FP_REGS:17800,17800 MEM:14240,14240

   Insn 55(l0): point = 0
   Insn 54(l0): point = 2
   Insn 51(l0): point = 5
   Insn 50(l0): point = 8
   Insn 49(l0): point = 10
   Insn 48(l0): point = 12
   Insn 47(l0): point = 14
   Insn 42(l0): point = 16
   Insn 40(l0): point = 18
   Insn 38(l0): point = 20
   Insn 36(l0): point = 22
   Insn 35(l0): point = 24
   Insn 34(l0): point = 26
   Insn 32(l0): point = 28
   Insn 8(l0): point = 31
   Insn 78(l0): point = 34
   Insn 7(l0): point = 37
   Insn 6(l0): point = 39
   Insn 23(l0): point = 41
   Insn 21(l0): point = 44
   Insn 20(l0): point = 46
   Insn 17(l0): point = 48
   Insn 16(l0): point = 50
   Insn 5(l0): point = 52
   Insn 4(l0): point = 54
   Insn 15(l0): point = 56
   Insn 14(l0): point = 58
   Insn 3(l0): point = 60
   Insn 12(l0): point = 62
   Insn 29(l1): point = 65
   Insn 28(l1): point = 67
   Insn 26(l1): point = 69
   Insn 25(l1): point = 71
 a0(r110): [11..12]
 a1(r113): [10..10]
 a2(r114): [10..10]
 a3(r111): [13..14]
 a4(r108): [19..20]
 a5(r106): [25..28]
 a6(r96): [34..39] [27..31]
 a7(r97): [37..37]
 a8(r94): [37..41]
 a9(r98): [42..48]
 a10(r100): [53..54]
 a11(r112): [52..52]
 a12(r101): [55..60]
 a13(r104): [57..62]
 a14(r94): [65..73]
 a15(r96): [65..73]
 a16(r97): [65..73]
      Moving ranges of a16r97 to a7r97:  [65..73]
      Moving ranges of a15r96 to a6r96:  [65..73]
      Moving ranges of a14r94 to a8r94:  [65..73]
Compressing live ranges: from 74 to 21 - 28%
Ranges after the compression:
 a0(r110): [1..2]
 a1(r113): [0..0]
 a2(r114): [0..0]
 a3(r111): [3..4]
 a4(r108): [5..6]
 a5(r106): [7..8]
 a6(r96): [19..20] [7..11]
 a7(r97): [19..20] [10..10]
 a8(r94): [19..20] [10..11]
 a9(r98): [12..13]
 a10(r100): [15..16]
 a11(r112): [14..14]
 a12(r101): [17..18]
 a13(r104): [17..18]
+++Allocating 88 bytes for conflict table (uncompressed size 136)
;; a0(r110,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r113,l0) conflicts: a2(r114,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r114,l0) conflicts: a1(r113,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r111,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r108,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r106,l0) conflicts: a6(r96,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

;; a6(r96,l0) conflicts: a5(r106,l0) a7(r97,l0) a8(r94,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r97,l0) conflicts: a6(r96,l0) a8(r94,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r94,l0) conflicts: a6(r96,l0) a7(r97,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r98,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r100,l0) conflicts:
;;     total conflict hard regs: 0-1
;;     conflict hard regs: 0-1

;; a11(r112,l0) conflicts:
;;     total conflict hard regs: 0-1
;;     conflict hard regs: 0-1

;; a12(r101,l0) conflicts: a13(r104,l0)
;;     total conflict hard regs: 0-1
;;     conflict hard regs: 0-1

;; a13(r104,l0) conflicts: a12(r101,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1


  cp0:a0(r110)<->a3(r111)@13:shuffle
  cp1:a8(r94)<->a9(r98)@12:shuffle
  cp2:a10(r100)<->a12(r101)@13:shuffle
  pref0:a6(r96)<-hr1@220
  pref1:a5(r106)<-hr0@13
  pref2:a4(r108)<-hr1@13
  pref3:a13(r104)<-hr0@13
  regions=2, blocks=10, points=21
    allocnos=17 (big 0), copies=3, conflicts=0, ranges=17

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 9 8 7 6 5 4 3 2
    all: 0r110 1r113 2r114 3r111 4r108 5r106 6r96 7r97 8r94 9r98 10r100 11r112 12r101 13r104
    modified regnos: 94 96 97 98 100 101 104 106 108 110 111 112 113 114
    border:
    Pressure: GENERAL_REGS=5
    Hard reg set forest:
      0:( 0-28 30 32-63)@0
        1:( 0-28 30)@62060
          2:( 0 2-28 30)@3572
            3:( 2-28 30)@5293
      Allocno a0r110 of GENERAL_REGS(30) has 30 avail. regs  0-28 30, node:  0-28 30 (confl regs =  29 31-85)
      Allocno a1r113 of GENERAL_REGS(30) has 30 avail. regs  0-28 30, node:  0-28 30 (confl regs =  29 31-85)
      Allocno a2r114 of GENERAL_REGS(30) has 30 avail. regs  0-28 30, node:  0-28 30 (confl regs =  29 31-85)
      Allocno a3r111 of GENERAL_REGS(30) has 30 avail. regs  0-28 30, node:  0-28 30 (confl regs =  29 31-85)
      Allocno a4r108 of GENERAL_REGS(30) has 29 avail. regs  1-28 30, ^node:  0-28 30 (confl regs =  0 29 31-85)
      Allocno a5r106 of GENERAL_REGS(30) has 29 avail. regs  0 2-28 30, node:  0 2-28 30 (confl regs =  1 29 31-85)
      Allocno a6r96 of GENERAL_REGS(30) has 30 avail. regs  0-28 30, node:  0-28 30 (confl regs =  29 31-85)
      Allocno a7r97 of GENERAL_REGS(30) has 30 avail. regs  0-28 30, node:  0-28 30 (confl regs =  29 31-85)
      Allocno a8r94 of GENERAL_REGS(30) has 30 avail. regs  0-28 30, node:  0-28 30 (confl regs =  29 31-85)
      Allocno a9r98 of GENERAL_REGS(30) has 30 avail. regs  0-28 30, node:  0-28 30 (confl regs =  29 31-85)
      Allocno a10r100 of GENERAL_REGS(30) has 28 avail. regs  2-28 30, node:  2-28 30 (confl regs =  0-1 29 31-85)
      Allocno a11r112 of GENERAL_REGS(30) has 28 avail. regs  2-28 30, node:  2-28 30 (confl regs =  0-1 29 31-85)
      Allocno a12r101 of GENERAL_REGS(30) has 28 avail. regs  2-28 30, node:  2-28 30 (confl regs =  0-1 29 31-85)
      Allocno a13r104 of GENERAL_REGS(30) has 29 avail. regs  0 2-28 30, node:  0 2-28 30 (confl regs =  1 29 31-85)
      Forming thread from colorable bucket:
        Forming thread by copy 0:a0r110-a3r111 (freq=13):
          Result (freq=440): a0r110(220) a3r111(220)
        Forming thread by copy 2:a10r100-a12r101 (freq=13):
          Result (freq=440): a10r100(220) a12r101(220)
        Forming thread by copy 1:a8r94-a9r98 (freq=12):
          Result (freq=1304): a8r94(987) a9r98(317)
      Pushing a11(r112,l0)(cost 0)
      Pushing a2(r114,l0)(cost 0)
      Pushing a1(r113,l0)(cost 0)
      Pushing a13(r104,l0)(cost 0)
      Pushing a5(r106,l0)(cost 0)
      Pushing a4(r108,l0)(cost 0)
      Pushing a10(r100,l0)(cost 0)
      Pushing a12(r101,l0)(cost 0)
      Pushing a3(r111,l0)(cost 0)
      Pushing a0(r110,l0)(cost 0)
      Pushing a9(r98,l0)(cost 0)
      Pushing a8(r94,l0)(cost 0)
      Pushing a6(r96,l0)(cost 0)
      Pushing a7(r97,l0)(cost 0)
      Popping a7(r97,l0)  --         assign reg 0
      Popping a6(r96,l0)  --         assign reg 1
      Popping a8(r94,l0)  --         assign reg 2
      Popping a9(r98,l0)  --         assign reg 2
      Popping a0(r110,l0)  --         assign reg 0
      Popping a3(r111,l0)  --         assign reg 0
      Popping a12(r101,l0)  --         assign reg 2
      Popping a10(r100,l0)  --         assign reg 2
      Popping a4(r108,l0)  --         assign reg 1
      Popping a5(r106,l0)  --         assign reg 0
      Popping a13(r104,l0)  --         assign reg 0
      Popping a1(r113,l0)  --         assign reg 0
      Popping a2(r114,l0)  --         assign reg 1
      Popping a11(r112,l0)  --         assign reg 2
Disposition:
    8:r94  l0     2    6:r96  l0     1    7:r97  l0     0    9:r98  l0     2
   10:r100 l0     2   12:r101 l0     2   13:r104 l0     0    5:r106 l0     0
    4:r108 l0     1    0:r110 l0     0    3:r111 l0     0   11:r112 l0     2
    1:r113 l0     0    2:r114 l0     1
New iteration of spill/restore move
+++Costs: overall -149, reg -149, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 67 [vg] 68 [p0] 69 [p1] 70 [p2] 71 [p3] 72 [p4] 73 [p5] 74 [p6] 75 [p7] 76 [p8] 77 [p9] 78 [p10] 79 [p11] 80 [p12] 81 [p13] 82 [p14] 83 [p15] 84 [ffr] 85 [ffrt]
;;  hardware regs used 	 31 [sp] 64 [sfp] 65 [ap]
;;  regular block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  eh block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  entry block defs 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 64 [sfp] 65 [ap]
;;  exit block uses 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp]
;;  regs ever live 	 0 [x0] 1 [x1] 16 [x16] 17 [x17] 30 [x30] 31 [sp] 66 [cc]
;;  ref usage 	r0={8d,5u} r1={8d,3u} r2={5d} r3={5d} r4={5d} r5={5d} r6={5d} r7={5d} r8={5d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={8d} r17={8d} r18={4d} r29={1d,9u} r30={5d} r31={1d,13u} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={1d,13u} r65={1d,8u} r66={7d,3u} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r94={1d,1u} r96={3d,2u} r97={2d,3u} r98={1d,2u} r100={1d,1u} r101={1d,1u} r104={1d,1u} r106={1d,1u} r108={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d} r113={1d} r114={1d} 
;;    total ref usage 381{312d,69u,0e} in 33{29 regular + 4 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 9 11 2 NOTE_INSN_FUNCTION_BEG)
(note 11 2 13 2 NOTE_INSN_DELETED)
(note 13 11 12 2 NOTE_INSN_DELETED)
(insn 12 13 3 2 (set (reg/f:DI 104)
        (high:DI (symbol_ref:DI ("_ZSt3cin") [flags 0xc0]  <var_decl 0xffffa1de6090 cin>))) "mul.cpp":6:10 53 {*movdi_aarch64}
     (expr_list:REG_EQUIV (high:DI (symbol_ref:DI ("_ZSt3cin") [flags 0xc0]  <var_decl 0xffffa1de6090 cin>))
        (nil)))
(insn 3 12 14 2 (set (reg/f:DI 101)
        (high:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__stack_chk_guard") [flags 0xc0]  <var_decl 0xffffa16a1ab0 __stack_chk_guard>)
                        (const_int 0 [0])
                    ] UNSPEC_SALT_ADDR)))) "mul.cpp":4:1 53 {*movdi_aarch64}
     (expr_list:REG_EQUIV (high:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__stack_chk_guard") [flags 0xc0]  <var_decl 0xffffa16a1ab0 __stack_chk_guard>)
                        (const_int 0 [0])
                    ] UNSPEC_SALT_ADDR)))
        (nil)))
(insn 14 3 15 2 (set (reg:DI 1 x1)
        (plus:DI (reg/f:DI 64 sfp)
            (const_int -12 [0xfffffffffffffff4]))) "mul.cpp":6:10 121 {*adddi3_aarch64}
     (nil))
(insn 15 14 4 2 (set (reg:DI 0 x0)
        (unspec:DI [
                (mem/u/c:DI (lo_sum:DI (reg/f:DI 104)
                        (symbol_ref:DI ("_ZSt3cin") [flags 0xc0]  <var_decl 0xffffa1de6090 cin>)) [0  S8 A8])
            ] UNSPEC_GOTSMALLPIC)) "mul.cpp":6:10 1016 {ldr_got_small_di}
     (expr_list:REG_DEAD (reg/f:DI 104)
        (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt3cin") [flags 0xc0]  <var_decl 0xffffa1de6090 cin>)
            (nil))))
(insn 4 15 5 2 (set (reg/f:DI 100)
        (unspec:DI [
                (mem/u/c:DI (lo_sum:DI (reg/f:DI 101)
                        (const:DI (unspec:DI [
                                    (symbol_ref:DI ("__stack_chk_guard") [flags 0xc0]  <var_decl 0xffffa16a1ab0 __stack_chk_guard>)
                                    (const_int 0 [0])
                                ] UNSPEC_SALT_ADDR))) [0  S8 A8])
            ] UNSPEC_GOTSMALLPIC)) "mul.cpp":4:1 1016 {ldr_got_small_di}
     (expr_list:REG_DEAD (reg/f:DI 101)
        (expr_list:REG_EQUIV (const:DI (unspec:DI [
                        (symbol_ref:DI ("__stack_chk_guard") [flags 0xc0]  <var_decl 0xffffa16a1ab0 __stack_chk_guard>)
                        (const_int 0 [0])
                    ] UNSPEC_SALT_ADDR))
            (nil))))
(insn 5 4 16 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 64 sfp)
                        (const_int -8 [0xfffffffffffffff8])) [14 D.51738+0 S8 A64])
                (unspec:DI [
                        (mem:DI (reg/f:DI 100) [0  S8 A8])
                    ] UNSPEC_SP_SET))
            (set (reg:DI 112)
                (const_int 0 [0]))
        ]) "mul.cpp":4:1 1063 {stack_protect_set_di}
     (expr_list:REG_DEAD (reg/f:DI 100)
        (expr_list:REG_UNUSED (reg:DI 112)
            (nil))))
(call_insn 16 5 17 2 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("_ZNSirsERi") [flags 0x41]  <function_decl 0xffffa1cde700 operator>>>) [0 operator>> S8 A8])
                    (const_int 0 [0])))
            (unspec:DI [
                    (const_int 0 [0])
                ] UNSPEC_CALLEE_ABI)
            (clobber (reg:DI 30 x30))
        ]) "mul.cpp":6:10 47 {*call_value_insn}
     (expr_list:REG_DEAD (reg:DI 1 x1)
        (expr_list:REG_UNUSED (reg:DI 0 x0)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSirsERi") [flags 0x41]  <function_decl 0xffffa1cde700 operator>>>)
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (nil))))))
(insn 17 16 20 2 (set (reg:SI 98 [ n.0_14 ])
        (mem/c:SI (plus:DI (reg/f:DI 64 sfp)
                (const_int -12 [0xfffffffffffffff4])) [5 n+0 S4 A32])) "mul.cpp":9:12 52 {*movsi_aarch64}
     (nil))
(insn 20 17 21 2 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 98 [ n.0_14 ])
            (const_int 1 [0x1]))) "mul.cpp":9:12 403 {cmpsi}
     (nil))
(jump_insn 21 20 22 2 (set (pc)
        (if_then_else (le (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 61)
            (pc))) "mul.cpp":9:12 15 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 118111604 (nil)))
 -> 61)
(note 22 21 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 6 3 (set (reg:SI 94 [ _6 ])
        (plus:SI (reg:SI 98 [ n.0_14 ])
            (const_int 1 [0x1]))) 120 {*addsi3_aarch64}
     (expr_list:REG_DEAD (reg:SI 98 [ n.0_14 ])
        (nil)))
(insn 6 23 7 3 (set (reg/v:SI 96 [ f ])
        (const_int 1 [0x1])) "mul.cpp":8:6 52 {*movsi_aarch64}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(insn 7 6 27 3 (set (reg/v:SI 97 [ i ])
        (const_int 2 [0x2])) "mul.cpp":7:6 52 {*movsi_aarch64}
     (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))
(code_label 27 7 24 4 6 (nil) [1 uses])
(note 24 27 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 4 (set (reg/v:SI 96 [ f ])
        (mult:SI (reg/v:SI 96 [ f ])
            (reg/v:SI 97 [ i ]))) "mul.cpp":11:10 375 {mulsi3}
     (nil))
(insn 26 25 28 4 (set (reg/v:SI 97 [ i ])
        (plus:SI (reg/v:SI 97 [ i ])
            (const_int 1 [0x1]))) "mul.cpp":12:10 120 {*addsi3_aarch64}
     (nil))
(insn 28 26 29 4 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 94 [ _6 ])
            (reg/v:SI 97 [ i ]))) "mul.cpp":9:12 403 {cmpsi}
     (nil))
(jump_insn 29 28 77 4 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 27)
            (pc))) "mul.cpp":9:12 15 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 27)
(note 77 29 78 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 78 77 79 5 (set (pc)
        (label_ref 30)) 2 {jump}
     (nil)
 -> 30)
(barrier 79 78 61)
(code_label 61 79 60 6 8 (nil) [1 uses])
(note 60 61 8 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 8 60 30 6 (set (reg/v:SI 96 [ f ])
        (const_int 1 [0x1])) "mul.cpp":8:6 52 {*movsi_aarch64}
     (nil))
(code_label 30 8 31 7 5 (nil) [1 uses])
(note 31 30 33 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(note 33 31 39 7 NOTE_INSN_DELETED)
(note 39 33 32 7 NOTE_INSN_DELETED)
(insn 32 39 34 7 (set (reg/f:DI 106)
        (high:DI (symbol_ref:DI ("_ZSt4cout") [flags 0xc0]  <var_decl 0xffffa1de6120 cout>))) "mul.cpp":14:11 53 {*movdi_aarch64}
     (expr_list:REG_EQUIV (high:DI (symbol_ref:DI ("_ZSt4cout") [flags 0xc0]  <var_decl 0xffffa1de6120 cout>))
        (nil)))
(insn 34 32 35 7 (set (reg:SI 1 x1)
        (reg/v:SI 96 [ f ])) "mul.cpp":14:11 52 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg/v:SI 96 [ f ])
        (nil)))
(insn 35 34 36 7 (set (reg:DI 0 x0)
        (unspec:DI [
                (mem/u/c:DI (lo_sum:DI (reg/f:DI 106)
                        (symbol_ref:DI ("_ZSt4cout") [flags 0xc0]  <var_decl 0xffffa1de6120 cout>)) [0  S8 A8])
            ] UNSPEC_GOTSMALLPIC)) "mul.cpp":14:11 1016 {ldr_got_small_di}
     (expr_list:REG_DEAD (reg/f:DI 106)
        (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0xc0]  <var_decl 0xffffa1de6120 cout>)
            (nil))))
(call_insn 36 35 38 7 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0xffffa1c41700 operator<<>) [0 operator<< S8 A8])
                    (const_int 0 [0])))
            (unspec:DI [
                    (const_int 0 [0])
                ] UNSPEC_CALLEE_ABI)
            (clobber (reg:DI 30 x30))
        ]) "mul.cpp":14:11 47 {*call_value_insn}
     (expr_list:REG_DEAD (reg:SI 1 x1)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0xffffa1c41700 operator<<>)
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (nil))))))
(insn 38 36 40 7 (set (reg/f:DI 108)
        (high:DI (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0xffffa1c54800 endl>))) "mul.cpp":14:14 53 {*movdi_aarch64}
     (expr_list:REG_EQUIV (high:DI (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0xffffa1c54800 endl>))
        (nil)))
(insn 40 38 42 7 (set (reg:DI 1 x1)
        (unspec:DI [
                (mem/u/c:DI (lo_sum:DI (reg/f:DI 108)
                        (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0xffffa1c54800 endl>)) [0  S8 A8])
            ] UNSPEC_GOTSMALLPIC)) "mul.cpp":14:14 1016 {ldr_got_small_di}
     (expr_list:REG_DEAD (reg/f:DI 108)
        (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0xffffa1c54800 endl>)
            (nil))))
(call_insn 42 40 47 7 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("_ZNSolsEPFRSoS_E") [flags 0x41]  <function_decl 0xffffa1c01c00 operator<<>) [0 operator<< S8 A8])
                    (const_int 0 [0])))
            (unspec:DI [
                    (const_int 0 [0])
                ] UNSPEC_CALLEE_ABI)
            (clobber (reg:DI 30 x30))
        ]) "mul.cpp":14:14 47 {*call_value_insn}
     (expr_list:REG_DEAD (reg:DI 1 x1)
        (expr_list:REG_UNUSED (reg:DI 0 x0)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSolsEPFRSoS_E") [flags 0x41]  <function_decl 0xffffa1c01c00 operator<<>)
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (nil))))))
(insn 47 42 48 7 (set (reg/f:DI 111)
        (high:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__stack_chk_guard") [flags 0xc0]  <var_decl 0xffffa16a1ab0 __stack_chk_guard>)
                        (const_int 1 [0x1])
                    ] UNSPEC_SALT_ADDR)))) "mul.cpp":16:1 53 {*movdi_aarch64}
     (expr_list:REG_EQUIV (high:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__stack_chk_guard") [flags 0xc0]  <var_decl 0xffffa16a1ab0 __stack_chk_guard>)
                        (const_int 1 [0x1])
                    ] UNSPEC_SALT_ADDR)))
        (nil)))
(insn 48 47 49 7 (set (reg/f:DI 110)
        (unspec:DI [
                (mem/u/c:DI (lo_sum:DI (reg/f:DI 111)
                        (const:DI (unspec:DI [
                                    (symbol_ref:DI ("__stack_chk_guard") [flags 0xc0]  <var_decl 0xffffa16a1ab0 __stack_chk_guard>)
                                    (const_int 1 [0x1])
                                ] UNSPEC_SALT_ADDR))) [0  S8 A8])
            ] UNSPEC_GOTSMALLPIC)) "mul.cpp":16:1 1016 {ldr_got_small_di}
     (expr_list:REG_DEAD (reg/f:DI 111)
        (expr_list:REG_EQUIV (const:DI (unspec:DI [
                        (symbol_ref:DI ("__stack_chk_guard") [flags 0xc0]  <var_decl 0xffffa16a1ab0 __stack_chk_guard>)
                        (const_int 1 [0x1])
                    ] UNSPEC_SALT_ADDR))
            (nil))))
(insn 49 48 50 7 (parallel [
            (set (reg:CC 66 cc)
                (unspec:CC [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 64 sfp)
                                (const_int -8 [0xfffffffffffffff8])) [14 D.51738+0 S8 A64])
                        (mem:DI (reg/f:DI 110) [0  S8 A8])
                    ] UNSPEC_SP_TEST))
            (clobber (reg:DI 113))
            (clobber (reg:DI 114))
        ]) "mul.cpp":16:1 1065 {stack_protect_test_di}
     (expr_list:REG_DEAD (reg/f:DI 110)
        (expr_list:REG_UNUSED (reg:DI 114)
            (expr_list:REG_UNUSED (reg:DI 113)
                (nil)))))
(jump_insn 50 49 62 7 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 53)
            (pc))) "mul.cpp":16:1 15 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 1073312332 (nil)))
 -> 53)
(note 62 50 51 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(call_insn 51 62 52 8 (parallel [
            (call (mem:DI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0xffffa16ca000 __stack_chk_fail>) [0 __stack_chk_fail S8 A8])
                (const_int 0 [0]))
            (unspec:DI [
                    (const_int 0 [0])
                ] UNSPEC_CALLEE_ABI)
            (clobber (reg:DI 30 x30))
        ]) "mul.cpp":16:1 46 {*call_insn}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0xffffa16ca000 __stack_chk_fail>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
(barrier 52 51 53)
(code_label 53 52 63 9 7 (nil) [1 uses])
(note 63 53 54 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 54 63 55 9 (set (reg/i:SI 0 x0)
        (const_int 0 [0])) "mul.cpp":16:1 52 {*movsi_aarch64}
     (nil))
(insn 55 54 80 9 (use (reg/i:SI 0 x0)) "mul.cpp":16:1 -1
     (nil))
(note 80 55 0 NOTE_INSN_DELETED)

;; Function _GLOBAL__sub_I_main (_GLOBAL__sub_I_main, funcdef_no=2277, decl_uid=51661, cgraph_uid=1011, symbol_order=1186) (executed once)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 1 for finding pseudo/allocno costs



   Insn 5(l0): point = 0
Compressing live ranges: from 3 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)

  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: GENERAL_REGS=2
    Hard reg set forest:
      0:( 0-28 30 32-63)@0
      Forming thread from colorable bucket:
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_GLOBAL__sub_I_main

Dataflow summary:
;;  fully invalidated by EH 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 67 [vg] 68 [p0] 69 [p1] 70 [p2] 71 [p3] 72 [p4] 73 [p5] 74 [p6] 75 [p7] 76 [p8] 77 [p9] 78 [p10] 79 [p11] 80 [p12] 81 [p13] 82 [p14] 83 [p15] 84 [ffr] 85 [ffrt]
;;  hardware regs used 	 31 [sp] 64 [sfp] 65 [ap]
;;  regular block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  eh block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  entry block defs 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 64 [sfp] 65 [ap]
;;  exit block uses 	 29 [x29] 31 [sp] 64 [sfp]
;;  regs ever live 	 16 [x16] 17 [x17] 31 [sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r3={2d} r4={2d} r5={2d} r6={2d} r7={2d} r8={2d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={2d} r17={2d} r18={1d} r29={1d,2u} r30={2d} r31={1d,3u} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d,2u} r65={1d,1u} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} 
;;    total ref usage 96{88d,8u,0e} in 1{0 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(call_insn/j 5 2 6 2 (parallel [
            (call (mem:DI (symbol_ref:DI ("_Z41__static_initialization_and_destruction_0ii.constprop.0") [flags 0x3]  <function_decl 0xffffa16a3500 __static_initialization_and_destruction_0.constprop>) [0 __static_initialization_and_destruction_0.constprop S8 A8])
                (const_int 0 [0]))
            (unspec:DI [
                    (const_int 0 [0])
                ] UNSPEC_CALLEE_ABI)
            (return)
        ]) "mul.cpp":16:1 48 {*sibcall_insn}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z41__static_initialization_and_destruction_0ii.constprop.0") [flags 0x3]  <function_decl 0xffffa16a3500 __static_initialization_and_destruction_0.constprop>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
(barrier 6 5 0)
